{"version":3,"file":"Component.js","names":["support","models","Component","UIComponent","metadata","manifest","init","globalThis","myComponent","setModel","createJsonModel","oModel","getModel","setSizeLimit","getRouter","initialize","getContentDensityClass","contentDensityClass","undefined","document","body","classList","contains","touch","i18n","str","translation","getProperty","getOdataModel","sName"],"sources":["../src/Component.ts"],"sourcesContent":["declare global {\n\t// eslint-disable-next-line no-var\n\tvar myComponent: Component\n}\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport { support } from \"sap/ui/Device\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport models from \"./model/models\";\n\n\n/**\n * @namespace ICL.InventoryCount\n */\nexport default class Component extends UIComponent {\n\n\tpublic static metadata = {\n\t\tmanifest: \"json\"\n\t};\n\n\tprivate contentDensityClass: string;\n\n\tpublic init(): void {\n\t\tglobalThis.myComponent = this;\n\t\tthis.setModel(models.createJsonModel(), \"CountsModel\");\n\t\tconst oModel = this.getModel('CountsModel')\n\t\toModel.setSizeLimit(1000);\n\n\t\t// call the base component's init function\n\t\tsuper.init();\n\t\t// this.getContentDensityClass()\n\t\tthis.getRouter().initialize();\n\t}\n\n\t/**\n\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t * design mode class should be set, which influences the size appearance of some controls.\n\t *\n\t * @public\n\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t */\n\tpublic getContentDensityClass(): string {\n\t\tif (this.contentDensityClass === undefined) {\n\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\tif (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\t\tthis.contentDensityClass = \"\";\n\t\t\t} else if (!support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCompact\";\n\t\t\t} else {\n\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\tthis.contentDensityClass = \"sapUiSizeCozy\";\n\t\t\t}\n\t\t}\n\t\treturn this.contentDensityClass;\n\t}\n\tpublic i18n(str: string): string {\n\t\tconst i18n = this.getModel(\"i18n\");\n\t\tconst translation = i18n.getProperty(str) as string\n\t\treturn translation;\n\t}\n\tpublic getOdataModel<T extends ODataModel>(sName?: string): T {\n\t\treturn <T>super.getModel(sName);\n\t}\n\n}\n"],"mappings":";;;;QAKSA,OAAO;EAAA,MAETC,MAAM;EAGb;AACA;AACA;EAFA,MAGqBC,SAAS,GAASC,WAAW;IAEnCC,QAAQ,EAAG;MACxBC,QAAQ,EAAE;IACX,CAAC;IAIMC,IAAI,mBAAS;MACnBC,UAAU,CAACC,WAAW,GAAG,IAAI;MAC7B,IAAI,CAACC,QAAQ,CAACR,MAAM,CAACS,eAAe,EAAE,EAAE,aAAa,CAAC;MACtD,MAAMC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAAC,aAAa,CAAC;MAC3CD,MAAM,CAACE,YAAY,CAAC,IAAI,CAAC;;MAEzB;MACA;MACA;MACA,IAAI,CAACC,SAAS,EAAE,CAACC,UAAU,EAAE;IAC9B,CAAC;IASMC,sBAAsB,qCAAW;MACvC,IAAI,IAAI,CAACC,mBAAmB,KAAKC,SAAS,EAAE;QAC3C;QACA,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,IAAIH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAC9G,IAAI,CAACL,mBAAmB,GAAG,EAAE;QAC9B,CAAC,MAAM,IAAI,CAACjB,OAAO,CAACuB,KAAK,EAAE;UAAE;UAC5B,IAAI,CAACN,mBAAmB,GAAG,kBAAkB;QAC9C,CAAC,MAAM;UACN;UACA,IAAI,CAACA,mBAAmB,GAAG,eAAe;QAC3C;MACD;MACA,OAAO,IAAI,CAACA,mBAAmB;IAChC,CAAC;IACMO,IAAI,iBAACC,GAAW,EAAU;MAChC,MAAMD,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAC,MAAM,CAAC;MAClC,MAAMc,WAAW,GAAGF,IAAI,CAACG,WAAW,CAACF,GAAG,CAAW;MACnD,OAAOC,WAAW;IACnB,CAAC;IACME,aAAa,0BAAuBC,KAAc,EAAK;MAC7D,iDAAyBA,KAAK;IAC/B;EAAC;EAAA,OAhDmB3B,SAAS;AAAA"}