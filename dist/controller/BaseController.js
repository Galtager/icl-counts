sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","../model/formatter","sap/ui/core/Fragment","sap/ui/core/IconPool","sap/ndc/BarcodeScanner","../model/models"],function(t,e,n,o,s,i,r){function a(t){return t&&t.__esModule&&typeof t.default!=="undefined"?t.default:t}const c=a(n);const l=a(r);const u=t.extend("ICL.InventoryCount.controller.BaseController",{constructor:function e(){t.prototype.constructor.apply(this,arguments);this.firstRun=true;this.formatter=c;this.fragments={}},onInit:function t(){if(this.firstRun){this.firstRun=false;const t=this.getCountsModel();this.loadFilters(t);this.loadIcons()}},getRouter:function t(){return myComponent.getRouter()},getOwnerComponent:function e(){return t.prototype.getOwnerComponent.call(this)},getResourceBundle:function t(){const e=this.getOwnerComponent().getModel("i18n");return e.getResourceBundle()},getModel:function t(e){return this.getView().getModel(e)},setModel:function t(e,n){this.getView().setModel(e,n);return this},navTo:function t(e,n,o){this.getRouter().navTo(e,n,undefined,o)},onNavBack:function t(){window.history.go(-1)},getMainView:function t(){return this.getView()||this.viewController.getView()},cancelFragment:function t(e,n){const o=this.getMainView().getId()+"--"+n;this.fragments[o].close()},onFragmentHandler:async function t(e,n,s){const i=this.getMainView().getId()+"--"+n;if(!!this.fragments[i]&&!s&&this.fragments[i].isOpen()){this.cancelFragment(e,n)}else{const t=e?.getSource();if(!this.fragments[i]){const t=await o.load({name:"ICL.InventoryCount.view.fragments."+n,controller:this});this.fragments[i]=t;this.getView().addDependent(this.fragments[i])}s?this.fragments[i].open():this.fragments[i].openBy(t,true)}},deleteRowFromList:function t(e,n){for(let t=0;t<e.length;t++){if(e[t]==n){e.splice(t,1);break}}myComponent.getModel("LocalModel").refresh()},loadIcons:function t(){const e=[{fontFamily:"SAP-icons-TNT",fontURI:sap.ui.require.toUrl("sap/tnt/themes/base/fonts/")},{fontFamily:"BusinessSuiteInAppSymbols",fontURI:sap.ui.require.toUrl("sap/ushell/themes/base/fonts/")}];e.forEach(t=>{s.registerFont(t)})},getCountsModel:function t(){const e=myComponent.getModel("CountsModel");return e},loadFilters:function t(e){void fetch("/mockData/CountsFilter.JSON").then(t=>t.json()).then(t=>e.setProperty("/oData/CountsFilter",t))},toggleInfo:function t(e,n){const o=this.getCountsModel();o.setProperty(n,!o.getProperty(n))},navToCount:function t(e,n){myComponent.getRouter().navTo("singleCount",{id:n})},searchFieldExpand:function t(e){const n=this.getView().byId(e);n.attachBrowserEvent("focusin",()=>{this.toggleInfo(null,`/oFlags/${e}Toggle`)});n.attachBrowserEvent("focusout",()=>{this.toggleInfo(null,`/oFlags/${e}Toggle`)})},onQRScanner:function t(e){const n=t=>{console.log(t)};const o=t=>{console.log(t)};i.scan(n,o,null,myComponent.i18n("barcodescanner"))},resetModel:function t(){this.setModel(l.createJsonModel(),"TempModel");const e=this.getModel("TempModel");const n=this.getCountsModel();n.setData(e)},myNavBack:function t(n){const o=e.getRouterFor(this);if(o.getRouteInfoByHash(o.getHashChanger().getHash()).name==="singleCount"){void this.onFragmentHandler(n,"Dialog_NavBack",true)}else{this.onNavBack()}},goBackHome:function t(){this.navTo("main")}});return u});